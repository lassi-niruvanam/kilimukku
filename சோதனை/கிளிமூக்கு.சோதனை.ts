import { expect } from "aegir/chai";

import { ClientConstellation, générerClient } from "@constl/ipa";
import { client, attente } from "@constl/utils-tests";
import { இலக்கு_மொழி_நெடுவரிசை_அடையாளம், கிளிமூக்கு, சாபி_நெடுவரிசை_அடையாளம், மூல்_உரை_நெடுவரிசை_அடையாளம், மூல்_மொழி_நெடுவரிசை_அடையாளம், மொழிபெயர்ப்பு_அகராதி_வகை, மொழிபெயர்ப்பு_நெடுவரிசை_அடையாளம் } from "@/குறியீட்டு.js";

const { générerClients } = client;

const தயாரிப்பு = async ({
  விண்மீன்,
  மூல்_மொழிபெயர்ப்புகள்,
}: {
  விண்மீன்: ClientConstellation;
  மூல்_மொழிபெயர்ப்புகள்: மொழிபெயர்ப்பு_அகராதி_வகை;
}) => {
  const குழு_அடையாளம் = await கிளிமூக்கு.உருவாக்கு({ விண்மீன் });
  return new கிளிமூக்கு({
    விண்மீன்,
    அடையாளம்: குழு_அடையாளம்,
    மூல்_மொழிபெயர்ப்புகள்,
  });
};

describe("கிளிமூக்கு", async () => {
  let விண்மீன்: ClientConstellation;
  const மறந்துவிடு: (() => Promise<void>)[] = [];

  before(async () => {
    const { clients: வாடிக்கையாளர்கள், fOublier: விண்மீனை_மறந்துவிடு } =
      await générerClients({ n: 1, générerClient });
    மறந்துவிடு.push(விண்மீனை_மறந்துவிடு);
    விண்மீன் = வாடிக்கையாளர்கள்[0];
  });

  after(async () => {
    return await Promise.all(மறந்துவிடு.map((செ) => செ()));
  });

  describe("சாபிகள்", async () => {
    let என்_கிளிமூக்கு: கிளிமூக்கு;

    const சாபிகள் = new attente.AttendreRésultat<string[]>();
    const செ_மறந்துவிடு: (() => Promise<void>)[] = [];

    before(async () => {
      என்_கிளிமூக்கு = await தயாரிப்பு({
        விண்மீன்,
        மூல்_மொழிபெயர்ப்புகள்: {
          "சாபி.முதல்": {
            த: "விண்மீன்",
            हिं: "तारामंडल",
          },
          "சாபி.இரண்டாவது": {
            த: "கிளிமூக்கு",
          },
        },
      });

      const சாபிகளை_மறந்துவிடு = await என்_கிளிமூக்கு.சாபிகளை_கேள்ளு({
        செ: (இ) => சாபிகள்.mettreÀJour(இ),
        பரிந்துரைகள்: "எனது",
      });
      செ_மறந்துவிடு.push(சாபிகளை_மறந்துவிடு);
    });

    after(async () => {
      return await Promise.all(செ_மறந்துவிடு.map((செ) => செ()));
    });

    it("மூல் சாபிகள்", async () => {
      const மதிப்பு = await சாபிகள்.attendreExiste();
      expect(மதிப்பு).to.contain("சாபி.முதல்", "சாபி.இரண்டாவது");
    });

    it("புதுச பரிந்துரைக்கப்பட்ட மொழிபெயர்ப்பு", async () => {
      await என்_கிளிமூக்கு.மொழிபெயர்ப்பை_பரிந்துரையு({
          சாபி: "சாபி.மூன்றாவது",
          மொழிபெயர்ப்பு: "ការបកប្រែ",
          இலக்கு_மொழி: "ខ្មែរ",
          மூல்_மொழி: "த",
          மூல்_உரை: "மொழிபெயர்ப்பு",
      })
      const மதிப்பு = await சாபிகள்.attendreQue(சா => சா.length > 2);
      expect(மதிப்பு).to.have.members(["சாபி.முதல்", "சாபி.இரண்டாவது", "சாபி.மூன்றாவது"])
    });

    it("புதுச அங்கீகரிக்கப்பட்ட மொழிபெயர்ப்பு", async () => {
      await என்_கிளிமூக்கு.அங்கீகரி({
        பரிந்துரை: {
          பங்கேற்பாளர்: "நான்",
          அடையாளம்: "அடையாளம்",
          பரிந்துரை: {
            [சாபி_நெடுவரிசை_அடையாளம்]: "சாபி.நான்காவது",
            [மொழிபெயர்ப்பு_நெடுவரிசை_அடையாளம்]: "ការបកប្រែ",
            [இலக்கு_மொழி_நெடுவரிசை_அடையாளம்]: "ខ្មែរ",
            [மூல்_மொழி_நெடுவரிசை_அடையாளம்]: "த",
            [மூல்_உரை_நெடுவரிசை_அடையாளம்]: "மொழிபெயர்ப்பு",
            தேதி: Date.now(),
          }
        }
      });

      const மதிப்பு = await சாபிகள்.attendreQue(சா => சா.length > 3);
      expect(மதிப்பு).to.have.members(["சாபி.முதல்", "சாபி.இரண்டாவது", "சாபி.மூன்றாவது", "சாபி.நான்காவது"])
    });
  });

  describe("மொழிகள்", async () => {
    let என்_கிளிமூக்கு: கிளிமூக்கு;

    const மொழிகள் = new attente.AttendreRésultat<string[]>();
    const செ_மறந்துவிடு: (() => Promise<void>)[] = [];

    before(async () => {
      என்_கிளிமூக்கு = await தயாரிப்பு({
        விண்மீன்,
        மூல்_மொழிபெயர்ப்புகள்: {
          "சாபி.முதல்": {
            த: "விண்மீன்",
            हिं: "तारामंडल",
          },
          "சாபி.இரண்டாவது": {
            த: "கிளிமூக்கு",
          },
        },
      });

      const சாபிகளை_மறந்துவிடு = await என்_கிளிமூக்கு.மொழிகளை_கேள்ளு({
        செ: (இ) => மொழிகள்.mettreÀJour(இ),
        பரிந்துரைகள்: "எனது",
      });

      செ_மறந்துவிடு.push(சாபிகளை_மறந்துவிடு);
    });

    after(async () => {
      return await Promise.all(செ_மறந்துவிடு.map((செ) => செ()));
    });

    it("மூல் மொழிகள்", async () => {
      const மதிப்பு = await மொழிகள்.attendreExiste();
      expect(மதிப்பு).to.contain("த", "हिं");
    });

    it("புதுச பரிந்துரைக்கப்பட்ட மொழிபெயர்ப்பு", async () => {
      await என்_கிளிமூக்கு.மொழிபெயர்ப்பை_பரிந்துரையு({
          சாபி: "சாபி.மூன்றாவது",
          மொழிபெயர்ப்பு: "ការបកប្រែ",
          இலக்கு_மொழி: "ខ្មែរ",
          மூல்_மொழி: "த",
          மூல்_உரை: "மொழிபெயர்ப்பு",
      })
      const மதிப்பு = await மொழிகள்.attendreQue(மொ => மொ.length > 2);
      expect(மதிப்பு).to.have.members(["த", "हिं", "ខ្មែរ"])
    });

    it("புதுச அங்கீகரிக்கப்பட்ட மொழிபெயர்ப்பு", async () => {
      await என்_கிளிமூக்கு.அங்கீகரி({
        பரிந்துரை: {
          பங்கேற்பாளர்: "நான்",
          அடையாளம்: "அடையாளம்",
          பரிந்துரை: {
            [சாபி_நெடுவரிசை_அடையாளம்]: "சாபி.மூன்றாவது",
            [மொழிபெயர்ப்பு_நெடுவரிசை_அடையாளம்]: "ترجمه",
            [இலக்கு_மொழி_நெடுவரிசை_அடையாளம்]: "فا",
            [மூல்_மொழி_நெடுவரிசை_அடையாளம்]: "த",
            [மூல்_உரை_நெடுவரிசை_அடையாளம்]: "மொழிபெயர்ப்பு",
            தேதி: Date.now(),
          }
        }
      });

      const மதிப்பு = await மொழிகள்.attendreQue(மொ => மொ.length > 3);
      expect(மதிப்பு).to.have.members(["த", "हिं", "ខ្មែរ", "فا"])
    });
  });

  it("அங்கீகரிக்கப்பட்ட_மொழிபெயர்ப்புகளை_கேள்ளு");
  it("மொழிபெயர்ப்புகளை_கேள்ளு");
  it("மொழிபெயர்ப்பு_பரிந்துரைகளை_கேள்ளு");
  it("எனது_மொழிபெயர்ப்பு_பரிந்துரைகளை_கேள்ளு");
  it("முன்னேற்றத்தை_கேள்ளு");
  it("மொழிபெயர்ப்பை_பரிந்துரையு");
  it("பேசு");
});
